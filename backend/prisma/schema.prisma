// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  avatar String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  chatMembers ChatMember[]
}

model Chat{
  id String @id @default(uuid())
  name String?
  ownerId String?
  isGroup Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
  members ChatMember[]
}

model ChatMember{
  id String @id @default(uuid())
  user User @relation(fields: [userId],references: [id])
  userId String
  chat Chat @relation(fields: [chatId],references: [id])
  chatId String
  role String @default("member")
  joinedAt DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId,chatId])
}

model Message{
  id String @id @default(uuid())
  content String 
  type String @default("text")
  chat Chat @relation(fields: [chatId],references: [id])
  chatId String
  sender User @relation(fields: [senderId],references: [id])
  senderId String
  seenBy String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chatId])
}